void verticalSum(Node *root) {
    // add code here.
     if(!root) return;
        map<int, int> mp;
        queue< pair< Node* , int> > q;
        q.push({root,0});
        while(!q.empty())
        {
            pair<Node* , int > curr= q.front(); 
            q.pop();
            mp[curr.second]+= curr.first->data;
            if(curr.first->left)
            q.push({curr.first->left , curr.second - 1});
           if(curr.first->right)
           q.push({curr.first->right, curr.second+1 });
        }
        for(auto it = mp.begin() ; it!=mp.end(); it++)
        cout<<it->second<<" ";
}
