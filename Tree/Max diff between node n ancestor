//FIrst meth - lT
class Solution {
public:
    int res= INT_MIN;
    void findD(TreeNode* root, int mind,int maxd)
    {
        res= max(res, maxd-mind);
        if(!root) return;
        findD(root->left , min(root->val , mind) , max(root->val , maxd)) ;
        findD(root->right , min(root->val , mind) , max(root->val , maxd ) ) ;
    }
    int maxAncestorDiff(TreeNode* root) {
     findD(root, root->val, root->val);
        return res;
    }
};

//Second meth - gfg
int maxDiffUtil(Node* t, int *res) 
{ 
    if (t == NULL) 
        return INT_MAX; 
    if (t->left == NULL && t->right == NULL) 
        return t->data; 
    int val = min(maxDiffUtil(t->left, res),  maxDiffUtil(t->right, res)); 
    *res = max(*res, t->data - val); 
    return min(val, t->data ); 
} 
int maxDiff(Node* root)
{
      int res = INT_MIN; 
    maxDiffUtil(root, &res); 
    return res; 
}
