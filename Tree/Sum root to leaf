//Input: [4,9,0,5,1]
    4
   / \
  9   0
 / \
5   1
Output: 1026
Explanation:
The root-to-leaf path 4->9->5 represents the number 495.
The root-to-leaf path 4->9->1 represents the number 491.
The root-to-leaf path 4->0 represents the number 40.
Therefore, sum = 495 + 491 + 40 = 1026.


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode* root, long long s , long long &ans)
    {
        if(!root) return;
        s = s*10 + root->val;
        if(!root->left && !root->right)
        {
            ans+=s;
            return;
        }
        solve(root->left , s, ans);
        solve(root->right, s, ans);
    }
    int sumNumbers(TreeNode* root) {
        long long s=0 , ans=0;
        solve(root, s, ans);
        return (int)ans;
        
    }
};
