void rightView(Node *root)
{
   // Your Code here
   if(!root) return;
   queue<Node*> q;
   q.push(root);
   while(!q.empty())
   {
       int qs= q.size();
       for(int i=0;i<qs; i++)
       {
           Node* curr= q.front();
           q.pop();
           if(i==qs-1) 
           cout<<curr->data<<" ";
           if(curr->left) 
           q.push(curr->left);
           if(curr->right)
           q.push(curr->right);
       }
   }
   
   
   using rec :
     void findr(TreeNode* root, int level, vector<int>&res)
    {
        if(level>res.size())
            res.push_back(root->val);
        if(root->right) findr(root->right , level+1, res);
        if(root->left)findr(root->left, level+1 , res);
    }
    vector<int> rightSideView(TreeNode* root) {
        vector<int> res;
         if(root)
        findr(root, 1, res) ;
        return res;
    }
