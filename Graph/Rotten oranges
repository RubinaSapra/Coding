class Solution {
public:
    int orangesRotting(vector<vector<int>>& g) {
        int r= g.size();
        int c= g[0].size();
        queue< pair< int , int> > q;
        int dx[] = { 1, -1, 0 , 0};
        int dy[] = {0, 0 , 1, -1};
        int res= 0;
        for(int i = 0 ; i< r; i++)
        {
            for(int j = 0; j<c; j++)
            {
                if(g[i][j] == 2 )
                    q.push({i,j});
            }
        }
        while(!q.empty())
        {
            int qs= q.size() ;
            int tmp = 0;
            for(int i = 0; i < qs; i++)
            {
                pair<int, int> curr= q.front();
                q.pop();
                for(int j =0 ; j< 4; j++)
                {
                    int xx= curr.first + dx[j];
                    int yy = curr.second + dy[j];
                    if(xx>=0 && xx<r && yy>=0 && yy<c && g[xx][yy] ==1 )
                    {
                        g[xx][yy] =2;
                        q.push({xx,yy});
                        tmp++;
                    }
                }
            }
                if(tmp>0)
                    res++;
        }
        for(int i =0 ; i< r; i++)
        {
            for(int j =0 ;j<c; j++)
            {
                if(g[i][j] == 1) 
                    return -1;
            }
        }
        return res;
    }
};
