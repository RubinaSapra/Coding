void dfs(int &c , int i ,int j , int N ,int M, int (&A)[SIZE][SIZE])
{
    if(i<0 || i>=N || j<0 || j>=M || A[i][j]!=1) return;
    A[i][j] = 2;
    c++;
    dfs(c,i+1,j,N,M,A);  dfs(c,i-1,j,N,M,A); 
    dfs(c,i,j+1,N,M,A);  dfs(c,i,j-1,N,M,A); 
    dfs(c,i+1,j+1,N,M,A);  dfs(c,i+1,j-1,N,M,A); 
    dfs(c,i-1,j-1,N,M,A);  dfs(c,i-1,j+1,N,M,A); 
}
int findMaxArea(int N, int M, int (&A) [SIZE][SIZE] )
{
   int res=-1;
   for(int i=0 ; i<N ; i++)
   {
       for(int j = 0; j<M ; j++ )
       {
           if(A[i][j] == 1 )
           {
               int c=0;
               dfs(c,i,j,N,M , A);
               res= max(c,res);
           }
           
       }
   }
   return res;
}
