class Solution { //leetcode ques
public:
    int res=0;
   void dfs( int i , int j , vector< vector< int> > & g)
    { 
        if(i<0 || i>=g.size() || j<0 || j>=g[0].size() || g[i][j]==0 )
        {
            res++;
            return;
        }
        if(g[i][j] ==2)
            return ;
        g[i][j]=2;
        dfs(i+1,j,g); dfs(i-1,j,g); dfs(i,j+1, g) ; dfs(i,j-1,g);
     }
    int islandPerimeter(vector<vector<int>>& grid) {
        int r= grid.size() ; 
        int c= grid[0].size() ; 
        for(int i=0 ; i< r;i++)
        {
            for( int j=0 ; j < c ; j++)
            {
                if(grid[i][j] == 1)
                    dfs(i,j, grid);
            }
        }
        return res;
    }
};
