string Solution::longestPalindrome(string A) {
    int l = A.length();
    if(l<=1) 
    return A;
    string ref(2*l+1,'#');
    for(int i=0;i<l ;i++)  ref[2*i+1] = A[i];
    int max_id=0,max_rad=0;
    for(int j=0;j<ref.size() ;j++)
    {
        int rad=1;
        while(j-rad>=0 && j+rad<ref.size() && ref[j-rad]==ref[j+rad] ) 
        rad++;
        if(rad>max_rad)
         {
             max_id = j;
             max_rad=rad;
         }
    }
    max_rad--;
    string res= ref.substr(max_id-max_rad,2*max_rad+1);
    string x;
    for(int i=0;i<res.size(); i++)
    {
        if(res[i]!='#')
        x.push_back(res[i]);
    }
    return x;
}
