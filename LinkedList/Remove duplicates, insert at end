#include<bits/stdc++.h>
using namespace std;
struct node 
{
	int x;
	struct node *next;
};
struct node* newnode(int x)
{
	node* tmp = (struct node*)malloc(sizeof(struct node*));
	tmp->x = x;
	tmp->next = NULL;
	return tmp;
}
struct node* insertend(node* root, int x)
{
	node* tmp = newnode(x);
	if(!root)
	return tmp;
	node* dup = root;
	while(dup->next)
	{
		dup = dup->next;
	}
	dup->next = tmp;
	return root;
}
void traverse(node* root)
{
	node* tmp = root;
	while(tmp)
	{
		printf("%d ", tmp->x);
		tmp = tmp->next;
	}
	printf("\n");
}
struct node* removedup(struct node* root)
{
	struct node* curr= root;
	struct node* prev= NULL;
	unordered_map<int, int> mp;
	while(curr)
	{
		if(mp[curr->x] == 1)
			prev ->next = curr->next;
		else
		{
			prev = curr;
			mp[curr->x]++;
		}
		curr = prev->next;
	}
	return root;

}
int main()
{
struct node* head = (struct node*) malloc(sizeof(struct node*))	;
head =NULL;
head = insertend(head,1);
head = insertend(head,1);
traverse(head);
head = insertend(head,2);
traverse(head);
head = insertend(head,3);
//traverse(head);
head = insertend(head,4);
head = insertend(head,1);
//traverse(head);
//head = insertend(head,5);
//head = insertend(head,2);
traverse(head);
head=removedup(head);
traverse(head);

}
