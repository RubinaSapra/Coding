class Solution {
public:
    vector<int> largestDivisibleSubset(vector<int>& nums) {
        vector<int> res;
        int n = nums.size();
        if(n==0) return res;
        sort(nums.begin(), nums.end());
        vector<int> dp(n,1);
        vector<int>prev(n, -1);
        int mx=0;
        for(int i=1;i<n;i++)
        {
            for(int j=0;j<i;j++)
            {
                if(nums[i]%nums[j]==0 && dp[i]<dp[j]+1)
                {
                    dp[i] = dp[j]+1;
                    prev[i]=j;
                }
            }
             if(dp[i]>dp[mx])
                    mx=i;
        }
        while(mx>=0)
        {
            res.push_back(nums[mx]);
            mx=prev[mx];
        }
        return res;
    }
};
