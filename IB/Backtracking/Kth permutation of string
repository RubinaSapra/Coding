string Solution::getPermutation(int A, int B) {
    vector<int> numbers(A);
vector<int> indices(A);
int n=A,k=B-1;
for (int i = 0; i < n; i++)
numbers[i] = i + 1;

int divisor = 1;
for (int place = 1; place <= n; place++)
{
    if((k / divisor) == 0)
        break;  
    indices[n-place] = (k / divisor) % place;
    divisor *= place;
}

for (int i = 0; i < n; i++)
{
    int index = indices[i] + i;
    if(index != i)
    {
        int temp = numbers[index];
        for(int j = index; j > i; j--)
           numbers[j] = numbers[j-1];
        numbers[i] = temp;
    }
}
string f;
for(int i=0;i<numbers.size();i++)
f+=to_string(numbers[i]);
return f;
}
