There is a row of seats. Assume that it contains N seats adjacent to each other. There is a group of people who 
are already seated in that row randomly. i.e. some are sitting together & some are scattered.
An occupied seat is marked with a character 'x' and an unoccupied seat is marked with a dot ('.')
Now your target is to make the whole group sit together i.e. next to each other, without having any vacant seat between them 
in such a way that the total number of hops or jumps to move them should be minimum.

int Solution::seats(string A) {
    int i=0 , j = A.length()-1 , ci=0 , cj=0 , si=0, sj=0;
    long res=0;
    while(i<j)
    {
        if(A[i]=='.')
         {
             si++;
             i++;
         }
         else if(A[j]=='.')
         {
             sj++;
             j--;
         }
         else{
             res+=ci*si + cj*sj;
             ci++; cj++;
             si=0;
             sj=0;
             i++;
             j--;
         }
    }
    if(i==j && A[i] =='.')
    si++;
    res+=ci*si + cj*sj;
    return (int) (res% 10000003);
}
