Given an integer array A of non-negative integers representing an elevation map where the width of each bar is 1,
compute how much water it is able to trap after raining.
Problem Constraints
1 <= |A| <= 100000
Input Format
The only argument given is integer array A.
Output Format
Return the total water it is able to trap after raining.
Example Input
Input 1: A = [0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1]
Input 2: A = [1, 2]
Example Output
Output 1: 6
Output 2: 0

int Solution::trap(const vector<int> &A) {
    stack<int> s;
    int sum=0,minn=-1;
    for(int i=0;i<A.size();i++){
        if(s.empty() or A[s.top()]>A[i]){
            s.push(i);
        }else{
            minn=-1;
            while(!s.empty() and A[s.top()]<=A[i]){
                if(minn!=-1){
                    sum+=(A[s.top()]-A[minn])*(i-s.top()-1);
                }
                minn=s.top();
                s.pop();
            }
            if(!s.empty())
            sum+=(A[i]-A[minn])*(i-s.top()-1);
            s.push(i);
        }
    }
    return sum;
}
