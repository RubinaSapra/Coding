  bool cmp(pair< pair< int, int> , int> a , pair< pair <int, int> , int> b)
    {
        return a.first.second < b.first.second;
    }
class Solution {
public:
    int jobScheduling(vector<int>& startTime, vector<int>& endTime, vector<int>& profit) {
      vector< pair< pair< int, int> , int> > v;
        int n= startTime.size();
      for(int i=0;i<n ; i++)
          v.push_back(make_pair(make_pair(startTime[i], endTime[i]), profit[i]));
        sort(v.begin() , v.end() , cmp);
        int res= INT_MIN;
        int dp[n];
        dp[0] = v[0].second;
        for(int i=1; i<n ; i++)
        {
            dp[i] = max(dp[i-1], v[i].second);
            for(int j = i-1; j>=0; j--)
            {
                if(v[j].first.second <= v[i].first.first)
                { dp[i] = max(dp[i], v[i].second + dp[j]); break; }
            }
            res = max(res, dp[i]);
        }
        return res;
            
    }
};
