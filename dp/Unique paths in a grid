int Solution::uniquePathsWithObstacles(vector<vector<int> > &A) {
    int r= A.size() , c= A[0].size();
    int dp[r][c];
    if(A[0][0] == 1  || A[r-1][c-1] == 1 ) return 0;
    dp[0][0] = 1;
    for(int i=1; i < r ; i++)
    {
       if(A[i][0]== 0 && dp[i-1][0]!=0)
       dp[i][0] = dp[i-1][0];
       else
       dp[i][0] = 0;
    }
    for(int i=1; i< c; i++)
   {
       if(A[0][i]==0 && dp[0][i-1]!=0)
       dp[0][i] = dp[0][i-1];
       else
       dp[0][i] = 0;
   }
    for(int i=1 ; i<r; i++)
    {
        for(int j = 1; j< c; j++)
         {
            if(A[i][j])
            dp[i][j]=0;
            else
            dp[i][j] = dp[i-1][j] + dp[i][j-1];
         }
    }
    return dp[r-1][c-1];
    
}
